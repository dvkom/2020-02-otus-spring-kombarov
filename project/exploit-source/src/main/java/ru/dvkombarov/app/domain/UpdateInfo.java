package ru.dvkombarov.app.domain;

import ru.dvkombarov.app.constants.SourceType;
import ru.dvkombarov.app.constants.UpdateStatus;

import javax.persistence.*;
import java.time.LocalDate;
import java.util.Objects;

@Entity
@Table(
    name = "update_info"
)
public class UpdateInfo {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private long id;

  @Enumerated(EnumType.STRING)
  @Column(name = "source_type")
  private SourceType sourceType;

  @Enumerated(EnumType.STRING)
  @Column(name = "update_status")
  private UpdateStatus updateStatus;

  @Column(name = "update_date_time")
  private LocalDate updateDateTime;

  @Column(columnDefinition = "TEXT")
  private String details;

  public UpdateInfo(SourceType sourceType, UpdateStatus updateStatus,
                    LocalDate updateDateTime, String details) {
    this.sourceType = sourceType;
    this.updateStatus = updateStatus;
    this.updateDateTime = updateDateTime;
    this.details = details;
  }

  public UpdateInfo(SourceType sourceType, UpdateStatus updateStatus, LocalDate updateDateTime) {
    this.sourceType = sourceType;
    this.updateStatus = updateStatus;
    this.updateDateTime = updateDateTime;
  }

  public UpdateInfo() {
  }

  public long getId() {
    return id;
  }

  public void setId(long id) {
    this.id = id;
  }

  public SourceType getSourceType() {
    return sourceType;
  }

  public void setSourceType(SourceType sourceType) {
    this.sourceType = sourceType;
  }

  public UpdateStatus getUpdateStatus() {
    return updateStatus;
  }

  public void setUpdateStatus(UpdateStatus updateStatus) {
    this.updateStatus = updateStatus;
  }

  public LocalDate getUpdateDateTime() {
    return updateDateTime;
  }

  public void setUpdateDateTime(LocalDate updateDateTime) {
    this.updateDateTime = updateDateTime;
  }

  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (!(o instanceof UpdateInfo)) return false;
    UpdateInfo that = (UpdateInfo) o;
    return id == that.id &&
        sourceType == that.sourceType &&
        updateStatus == that.updateStatus &&
        Objects.equals(updateDateTime, that.updateDateTime) &&
        Objects.equals(details, that.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sourceType, updateStatus, updateDateTime, details);
  }

  @Override
  public String toString() {
    return "UpdateInfo{" +
        "id=" + id +
        ", sourceType=" + sourceType +
        ", updateStatus=" + updateStatus +
        ", updateDateTime=" + updateDateTime +
        ", details='" + details + '\'' +
        '}';
  }
}

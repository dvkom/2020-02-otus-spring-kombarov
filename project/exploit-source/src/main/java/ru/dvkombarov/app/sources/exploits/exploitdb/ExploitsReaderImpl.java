package ru.dvkombarov.app.sources.exploits.exploitdb;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import ru.dvkombarov.app.configuration.CommonConfig;
import ru.dvkombarov.app.configuration.ExploitSourceConfig;
import ru.dvkombarov.app.domain.Exploit;
import ru.dvkombarov.app.domain.ExploitId;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

@Component
public class ExploitsReaderImpl implements ExploitsReader {

  private static final Logger LOG = LoggerFactory.getLogger(ExploitsReaderImpl.class);
  private static final Integer SOURCE_ID_INDEX = 0;
  private static final Integer URL_INDEX = 1;
  private static final Integer DESCRIPTION_INDEX = 2;

  private final ExploitSourceConfig exploitSourceConfig;

  private final CommonConfig commonConfig;

  public ExploitsReaderImpl(ExploitSourceConfig exploitSourceConfig, CommonConfig commonConfig) {
    this.exploitSourceConfig = exploitSourceConfig;
    this.commonConfig = commonConfig;
  }

  @Override
  public List<Exploit> readExploits(InputStream inputStream) throws IOException {
    LOG.info("Exploits reading started");

    final BufferedReader reader = new BufferedReader(
        new InputStreamReader(inputStream, StandardCharsets.UTF_8)
    );

    try (reader) {
      List<Exploit> readExploits = new ArrayList<>();
      String line;
      while ((line = reader.readLine()) != null) {
        String[] values = line.split(commonConfig.getCommaDelimiter());
        readExploits.add(new Exploit(
            new ExploitId(values[SOURCE_ID_INDEX], SourceType.EXPLOIT_DB.getId()),
            values[DESCRIPTION_INDEX],
            exploitSourceConfig.getRawDownloadUrl() + values[URL_INDEX])
        );
      }
      LOG.info("Exploits reading finished");

      return readExploits;
    }
  }
}

package ru.dvkombarov.app.sources.vulners;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import ru.dvkombarov.app.configuration.VulnersDateParserConfig;
import ru.dvkombarov.app.sources.LastUpdateDateHtmlParser;

import java.io.IOException;
import java.time.LocalDate;
import java.util.Optional;

@Component("vulnersDateParser")
public class VulnersDateParser implements LastUpdateDateHtmlParser {

  private static final Logger LOG = LoggerFactory.getLogger(VulnersDateParser.class);

  private final VulnersDateParserConfig config;

  public VulnersDateParser(VulnersDateParserConfig config) {
    this.config = config;
  }

  @Override
  public LocalDate parseDateFromDocument() throws IOException {
    LOG.debug("Call method VulnersDateParser::parseDateFromDocument");
    Document docWithDate = Jsoup.connect(config.getUrl()).get();
    String dateQuery = "div:matchesOwn(" + config.getRegexp() + ")";

    return Optional.ofNullable(docWithDate)
        .map(document -> document.select(dateQuery))
        .map(Elements::first)
        .map(Element::ownText)
        .map(s -> s.substring(config.getStartPosition(), config.getEndPosition()))
        .map(LocalDate::parse)
        .orElse(LocalDate.now());
  }
}

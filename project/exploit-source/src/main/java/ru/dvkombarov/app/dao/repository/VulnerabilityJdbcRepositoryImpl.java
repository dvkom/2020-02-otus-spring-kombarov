package ru.dvkombarov.app.dao.repository;

import org.springframework.jdbc.core.BatchPreparedStatementSetter;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import ru.dvkombarov.app.domain.Vulnerability;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

@Component
public class VulnerabilityJdbcRepositoryImpl implements VulnerabilityJdbcRepository {

  private final JdbcTemplate jdbcTemplate;

  public VulnerabilityJdbcRepositoryImpl(JdbcTemplate jdbcTemplate) {
    this.jdbcTemplate = jdbcTemplate;
  }

  /**
   * Batch insert into DB with some optimizations to avoid duplication and improve performance.
   * For postgres only.
   *
   * @param vulnerabilities the list of vulnerabilities
   */

  @Override
  public void saveAll(List<Vulnerability> vulnerabilities) {
    jdbcTemplate.batchUpdate("" +
            "INSERT INTO vulnerability (cve, description) " +
            "VALUES (?, ?) " +
            "ON CONFLICT (cve) DO UPDATE " +
            "SET description = excluded.description",
        new BatchPreparedStatementSetter() {

          @Override
          public void setValues(PreparedStatement ps, int i) throws SQLException {
            ps.setString(1, vulnerabilities.get(i).getCve());
            ps.setString(2, vulnerabilities.get(i).getDescription());
          }

          @Override
          public int getBatchSize() {
            return vulnerabilities.size();
          }
        });
  }
}

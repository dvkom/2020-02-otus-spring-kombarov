package ru.dvkombarov.app.dao.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import ru.dvkombarov.app.constants.SourceType;
import ru.dvkombarov.app.constants.UpdateStatus;
import ru.dvkombarov.app.dao.repository.UpdateInfoRepository;
import ru.dvkombarov.app.domain.UpdateInfo;

import java.time.LocalDate;

@Service
public class UpdateInfoServiceImpl implements UpdateInfoService {

  private static final Logger LOG = LoggerFactory.getLogger(UpdateInfoServiceImpl.class);

  private final UpdateInfoRepository updateInfoRepository;

  public UpdateInfoServiceImpl(UpdateInfoRepository updateInfoRepository) {
    this.updateInfoRepository = updateInfoRepository;
  }

  @Override
  @Transactional
  public LocalDate getLastUpdateDate(SourceType sourceType, UpdateStatus updateStatus) {
    LOG.info("Call method getLastUpdateDate, sourceType = {}, updateStatus = {}"
        , sourceType, updateStatus);

    return updateInfoRepository.getLastUpdateDateTime(sourceType, updateStatus)
        .orElse(LocalDate.now().minusMonths(1L));
  }

  @Override
  @Transactional
  public void save(UpdateInfo updateInfo) {
    LOG.info("Call method save, updateInfo = {}", updateInfo);

    updateInfoRepository.save(updateInfo);
  }
}

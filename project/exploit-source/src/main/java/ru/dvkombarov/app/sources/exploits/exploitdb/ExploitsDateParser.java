package ru.dvkombarov.app.sources.exploits.exploitdb;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import ru.dvkombarov.app.configuration.ExploitDateParserConfig;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.Optional;

@Component("exploitsDateParser")
public class ExploitsDateParser implements LastUpdateDateHtmlParser {

  private static final Logger LOG = LoggerFactory.getLogger(ExploitsDateParser.class);

  private final ExploitDateParserConfig config;

  public ExploitsDateParser(ExploitDateParserConfig config) {
    this.config = config;
  }

  @Override
  public LocalDate parseDateFromDocument() {
      try {
        Document docWithDate = Jsoup.connect(config.getUrl()).get();
        String dateQuery = "a:matchesOwn(" + config.getRegexp() + ")";

        return Optional.ofNullable(docWithDate)
                .map(document -> document.select(dateQuery))
                .map(Elements::first)
                .map(Element::ownText)
                .map(s -> s.substring(config.getStartPosition(), config.getEndPosition()))
                .map(LocalDate::parse)
                .orElse(LocalDate.now());

      } catch (DateTimeParseException | StringIndexOutOfBoundsException | IOException e) {
        LOG.error("Error parsing exploits update date: ", e);

        return LocalDate.now();
      }
  }
}
